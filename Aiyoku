local HttpService = game:GetService("HttpService")
local placeId = game.PlaceId

-- Mapping multiple PlaceIds to a single script
local Scripts = {
    ["99Nights"] = {
        PlaceIds = {
            [126509999114328] = true,
            [123456789012345] = true, -- Add another PlaceId here
        },
        URL = "https://gist.githubusercontent.com/ScriptsForDays/205761789f0c96bdeb5c68b759dcb8fe/raw/c8d4bf7431542b6a6abf79dd8045aaa67fd1adac/99%2520NIGHTS%2520BETA"
    },

    --[[ 
    ["AnotherGame"] = {
        PlaceIds = {
            [111111111111111] = true,
            [222222222222222] = true,
        },
        URL = "https://raw.githubusercontent.com/YourUsername/YourRepo/main/YourScript.lua"
    },
    ]]
}

-- Function to find the matching script URL
local function getScriptURL(pid)
    for _, scriptData in pairs(Scripts) do
        if scriptData.PlaceIds[pid] then
            return scriptData.URL
        end
    end
    return nil
end

local url = getScriptURL(placeId)

if url then
    local success, err = pcall(function()
        local scriptSource = game:HttpGet(url, true)
        loadstring(scriptSource)()
    end)
    if not success then
        warn("Failed to load script for PlaceId:", placeId, err)
    end
else
    warn("No script assigned for this PlaceId:", placeId)
end
